{"ast":null,"code":"import React,{useState,useEffect}from'react';import{format}from'date-fns';import{saveAs}from'file-saver';import'./ReservationForm.css';// Import the CSS file for styling\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ReservationForm=()=>{const[formData,setFormData]=useState({name:'',email:'',selectedDate:'',startTime:'',endTime:'',location:''});const[isPopUpOpen,setIsPopUpOpen]=useState(false);useEffect(()=>{// Extract date parameter from the URL\nconst urlParams=new URLSearchParams(window.location.search);const dateParam=urlParams.get('date');// Set the date in the form data if it exists\nif(dateParam){setFormData(prevData=>({...prevData,selectedDate:dateParam}));setIsPopUpOpen(true);// Optionally open the pop-up\n}},[]);const handleChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};const handleDateSelection=selectedDate=>{setFormData(prevData=>({...prevData,selectedDate}));setIsPopUpOpen(true);};const handlePopUpClose=()=>{setIsPopUpOpen(false);};const handleTimeChangeClick=()=>{setIsPopUpOpen(true);};const handleDateChange=e=>{const{name,value}=e.target;setFormData(prevData=>({...prevData,[name]:value}));};const handleSubmit=()=>{const{selectedDate,startTime,endTime}=formData;// Check if all required fields are filled\nif(!selectedDate||!startTime||!endTime){alert('Please select date, start time, and end time.');return;}// Generate .ics content\nconst formattedDate=selectedDate.replace(/-/g,'');const startT=startTime.replace(/:/g,'');const endT=endTime.replace(/:/g,'');const icsContent=\"BEGIN:VCALENDAR\\nVERSION:2.0\\nBEGIN:VEVENT\\nTZID:Eastern Standard Time\\nSUMMARY:Appointment Scheduled for \".concat(formData.name,\"\\nDTEND;TZID=\\\"Eastern Standard Time\\\":\").concat(formattedDate,\"T\").concat(endT,\"00\\nDTSTART;TZID=\\\"Eastern Standard Time\\\":\").concat(formattedDate,\"T\").concat(startT,\"00\\nLOCATION: \").concat(formData.location,\"\\n\\nDTSTART:\").concat(format(new Date(\"\".concat(selectedDate,\"T\").concat(startTime)),'yyyyMMddTHHmmss'),\"\\nDTEND:\").concat(format(new Date(\"\".concat(selectedDate,\"T\").concat(endTime)),'yyyyMMddTHHmmss'),\"\\nDESCRIPTION:Reservation for \").concat(formData.name,\" - \").concat(formData.email,\" for the selected time \").concat(startTime,\" to \").concat(endTime,\"\\n\\nBEGIN:VALARM\\nTRIGGER:-PT15M\\nACTION:DISPLAY\\nDESCRIPTION:Reminder\\nEND:VALARM\\nEND:VEVENT\\nEND:VCALENDAR\");// Create Blob and trigger file download\nconst fileName=\"\".concat(formData.name,\"reservation.ics\");const blob=new Blob([icsContent],{type:'text/calendar;charset=utf-8'});saveAs(blob,fileName);// Reset form data after submission\nsetFormData({name:'',email:'',selectedDate:'',startTime:'',endTime:'',location:''});setIsPopUpOpen(false);// Close the pop-up after submission\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{id:\"texts\",children:\"Input your information accordingly:\"}),/*#__PURE__*/_jsx(\"label\",{id:\"texts\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{id:\"texts\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{id:\"texts\",children:\"Location:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"location\",value:formData.location,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{id:\"texts\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"selectedDate\",value:formData.selectedDate,onChange:handleDateChange}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTimeChangeClick,children:\"Change Reservation Time\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"popup \".concat(isPopUpOpen?'visible':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:handlePopUpClose,children:\"\\xD7 \"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Please select your time of reservation:\"}),/*#__PURE__*/_jsx(\"label\",{id:\"texts\",children:\"Start Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:\"startTime\",value:formData.startTime,onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{id:\"texts\",children:\"End Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",name:\"endTime\",value:formData.endTime,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePopUpClose,children:\"Done\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h2\",{id:\"texts\",children:\"Please review the information before submission\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Date Selected: \",/*#__PURE__*/_jsx(\"b\",{children:formData.selectedDate})]}),/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"pTime\",children:[\"Start Time: \",/*#__PURE__*/_jsx(\"b\",{children:formData.startTime})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"pTime\",children:[\"End Time:\",/*#__PURE__*/_jsx(\"b\",{children:formData.endTime})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Submit\"})]});};export default ReservationForm;","map":{"version":3,"names":["React","useState","useEffect","format","saveAs","jsx","_jsx","jsxs","_jsxs","ReservationForm","formData","setFormData","name","email","selectedDate","startTime","endTime","location","isPopUpOpen","setIsPopUpOpen","urlParams","URLSearchParams","window","search","dateParam","get","prevData","handleChange","e","value","target","handleDateSelection","handlePopUpClose","handleTimeChangeClick","handleDateChange","handleSubmit","alert","formattedDate","replace","startT","endT","icsContent","concat","Date","fileName","blob","Blob","type","children","id","onChange","onClick","className"],"sources":["/Users/fardinrahman/Projects/reservify/src/components/ReservationForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { format } from 'date-fns';\nimport { saveAs } from 'file-saver';\n\nimport './ReservationForm.css'; // Import the CSS file for styling\n\nconst ReservationForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    selectedDate: '',\n    startTime: '',\n    endTime: '',\n    location: '',\n  });\n\n  const [isPopUpOpen, setIsPopUpOpen] = useState(false);\n  useEffect(() => {\n    // Extract date parameter from the URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const dateParam = urlParams.get('date');\n\n    // Set the date in the form data if it exists\n    if (dateParam) {\n      setFormData((prevData) => ({ ...prevData, selectedDate: dateParam }));\n      setIsPopUpOpen(true); // Optionally open the pop-up\n    }\n  }, []);\n  \n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleDateSelection = (selectedDate) => {\n    setFormData((prevData) => ({ ...prevData, selectedDate }));\n    setIsPopUpOpen(true);\n  };\n\n  const handlePopUpClose = () => {\n    setIsPopUpOpen(false);\n  };\n  const handleTimeChangeClick = () => {\n    setIsPopUpOpen(true);\n  };\n  const handleDateChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n  const handleSubmit = () => {\n    const { selectedDate, startTime, endTime } = formData;\n\n    // Check if all required fields are filled\n    if (!selectedDate || !startTime || !endTime) {\n      alert('Please select date, start time, and end time.');\n      return;\n    }\n\n    // Generate .ics content\n    const formattedDate = selectedDate.replace(/-/g, '');\n    const startT = startTime.replace(/:/g, '');\n    const endT = endTime.replace(/:/g, '');\n\n    const icsContent = `BEGIN:VCALENDAR\nVERSION:2.0\nBEGIN:VEVENT\nTZID:Eastern Standard Time\nSUMMARY:Appointment Scheduled for ${formData.name}\nDTEND;TZID=\"Eastern Standard Time\":${formattedDate}T${endT}00\nDTSTART;TZID=\"Eastern Standard Time\":${formattedDate}T${startT}00\nLOCATION: ${formData.location}\n\nDTSTART:${format(new Date(`${selectedDate}T${startTime}`), 'yyyyMMddTHHmmss')}\nDTEND:${format(new Date(`${selectedDate}T${endTime}`), 'yyyyMMddTHHmmss')}\nDESCRIPTION:Reservation for ${formData.name} - ${formData.email} for the selected time ${startTime} to ${endTime}\n\nBEGIN:VALARM\nTRIGGER:-PT15M\nACTION:DISPLAY\nDESCRIPTION:Reminder\nEND:VALARM\nEND:VEVENT\nEND:VCALENDAR`;\n\n    // Create Blob and trigger file download\n    const fileName = `${formData.name}reservation.ics`;\n    const blob = new Blob([icsContent], { type: 'text/calendar;charset=utf-8' });\n    saveAs(blob, fileName);\n\n    // Reset form data after submission\n    setFormData({\n      name: '',\n      email: '',\n      selectedDate: '',\n      startTime: '',\n      endTime: '',\n      location: '',\n    });\n    setIsPopUpOpen(false); // Close the pop-up after submission\n  };\n\n  return (\n    <div>\n      <h2 id=\"texts\">Input your information accordingly:</h2>\n      <label id=\"texts\">Name:</label>\n      <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\n\n      <label id=\"texts\">Email:</label>\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n\n      <label id=\"texts\">Location:</label>\n      <input type=\"text\" name=\"location\" value={formData.location} onChange={handleChange} />\n      <label id=\"texts\">Date:</label>\n      <input type=\"date\" name=\"selectedDate\" value={formData.selectedDate} onChange={handleDateChange} />\n\n      <br></br><button onClick={handleTimeChangeClick}>Change Reservation Time</button>\n\n\n      {/* Render pre-decided dates as buttons */}\n     \n\n      {/* Time selection pop-up */}\n      <div className={`popup ${isPopUpOpen ? 'visible' : ''}`}>\n      <button className=\"close-button\" onClick={handlePopUpClose}>\n          &times; {/* Use the \"times\" symbol (X) for the close button */}\n        </button>\n        <h3>Please select your time of reservation:</h3>\n        <label id=\"texts\">Start Time:</label>\n        <input type=\"time\" name=\"startTime\" value={formData.startTime} onChange={handleChange} />\n\n        <label id=\"texts\">End Time:</label>\n        <input type=\"time\" name=\"endTime\" value={formData.endTime} onChange={handleChange} />\n\n        <button onClick={handlePopUpClose}>Done</button>\n      </div>\n      <br></br>\n      <h2 id=\"texts\">Please review the information before submission</h2>\n     \n      <label>Date Selected: <b>{formData.selectedDate}</b></label>\n      \n      <center>\n      <p className= \"pTime\" >Start Time: <b>{formData.startTime}</b></p>\n      \n      <p className= \"pTime\" >End Time:<b>{formData.endTime}</b></p>\n      </center>\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  );\n};\n\nexport default ReservationForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}